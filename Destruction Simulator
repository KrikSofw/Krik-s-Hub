local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
--window
local Window = Rayfield:CreateWindow({
    Name = "ðŸ’¥ Destruction Simulator Fucker By Krik#9388",
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "ðŸ’¥Destruction Simulator Fucker"
    },
    Discord = {
       Enabled = true,
       Invite = "9QPUfrst7C", -- The Discord invite code, do not include discord.gg/
       RememberJoins = false -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Krik's Hub",
       Subtitle = "Key System",
       Note = "Join the discord (discord.gg/sirius)",
       FileName = "SiriusKey",
       SaveKey = false,
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = "Hello"
    }
 })
--Tab
 local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image
--Section
 local Section = Tab:CreateSection("Player Stats")
 --Toggle
 local Toggle = Tab:CreateToggle({
    Name = "Infinite Money",
    CurrentValue = false,
    Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })

  --Toggle
  local Toggle = Tab:CreateToggle({
     Name = "Infinite Levels",
     CurrentValue = false,
     Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
     Callback = function(Value)
     local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
--window
local Window = Rayfield:CreateWindow({
    Name = "ðŸ’¥ Destruction Simulator Fucker By Krik#9388",
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "ðŸ’¥Destruction Simulator Fucker"
    },
    Discord = {
       Enabled = true,
       Invite = "9QPUfrst7C", -- The Discord invite code, do not include discord.gg/
       RememberJoins = false -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Krik's Hub",
       Subtitle = "Key System",
       Note = "Join the discord (discord.gg/sirius)",
       FileName = "SiriusKey",
       SaveKey = false,
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = "Hello"
    }
 })
--Tab
 local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image
--Section
 local Section = Tab:CreateSection("Player Stats")
 --Toggle
 local Toggle = Tab:CreateToggle({
    Name = "Infinite Money",
    CurrentValue = false,
    Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })

  --Toggle
  local Toggle = Tab:CreateToggle({
     Name = "Infinite Levels",
     CurrentValue = false,
     Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
     Callback = function(True)
        
     end,
  })


local Toggle = Tab:CreateToggle({
   Name = "Auto Rebirth",
   CurrentValue = false,
   Flag = "Toggle3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    --later
   end,
})
        


 --Section
 local Section = Tab:CreateSection("Best Items")

 local Button = Tab:CreateButton({
    Name = "Best Rocket Launcher (100M Coins)",
    Callback = function()
-- The function that takes place when the button is pressed

    end,
 })

 local Button = Tab:CreateButton({
    Name = "Best Backpack (50M Coins)",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Best Bomb (15M Coins)",
    Callback = function()      
    end,
 })

 local Section = Tab:CreateSection("Modifed Boosts")
 local Button = Tab:CreateButton({
    Name = "Coin Boost",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "XP Boost",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Brick Boost",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Extra Speed",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Extra Speed",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Levels (Same as inf levels)", --use levels0
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Coins (Same as inf levels)",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })




























































 

 
 
 
 
 
 
 
 
 
 















--Player Stats
getgenv().Levels = false --Gets you levels
getgenv().AutoRebirth = false --Auto Rebirths for you
getgenv().Inf_Money = false --RUN DURING REBIRTHS AND LEVELS
--Best Items in the game   
getgenv().BestLauncher = false--Execute The Script And Look Into Console (Reach the Price Then Set It To True)
getgenv().BestBackup = false --Execute The Script And Look Into Console (Reach the Price Then Set It To True)
getgenv().BestBomb = false --Execute The Script And Look Into Console (Reach the Price Then Set It To True)
--Infinite Boosts
getgenv().CoinBoost = false --Gives you infinite Coin-Boost
getgenv().XPBoost = false --Gives you infinite XP-Boost
getgenv().BrickBoost = false --Gives you infinite Brick-Boost
getgenv().Extra_Speed = false --Gives you infinite Extra Speed
getgenv().Super_Jump = false --Gives you infinite Super Jump
getgenv().Levels0 = false --Gives you infinite Levels (USELESS AS FUCK)
getgenv().Coins = false --Gives you infinite Coins (USELESS AS FUCK)


--Edit this in any way i will find you and kill you. 
    print("Script Status - PRIVATE")
    wait(1)
  
    
    

spawn(function ()
    while Levels == true do
    
        game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer("Levels", 480, 10)
        wait()
    end
end)

spawn(function ()
    
while AutoRebirth == true do
    
    game:GetService("ReplicatedStorage").Remotes.rankUp:FireServer()
    wait()
    
end


end)

spawn(function ()
    
while Inf_Money == true do
    
	game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer("Coins", 480, 10000000)
    wait()

end

end)
    
spawn(function ()
    
while CoinBoost == true do
    
    local args = {
        [1] = "CoinBoost",
        [2] = 950000,
        [3] = 100000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
wait()    

end

end)

spawn(function ()
    
while XPBoost == true do
    
    local args = {
        [1] = "XPBoost",
        [2] = 950000,
        [3] = 100000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()

end

spawn(function ()
    
while Extra_Speed == true do
    
    local args = {
        [1] = "ExtraSpeed",
        [2] = 950000,
        [3] = 100000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()


end



end)




end)

spawn(function ()
    
while XPBoost == true do
    
    local args = {
        [1] = "BrickBoost",
        [2] = 950000,
        [3] = 100000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()
end

end)


spawn(function ()
    
while Super_Jump == true do
    
    local args = {
        [1] = "SuperJump",
        [2] = 950000,
        [3] = 100000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()
end

end)

spawn(function ()
    
while Levels0 == true do
    
    local args = {
        [1] = "Levels",
        [2] = 1800,
        [3] = 10
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()

end

end)

spawn(function ()
    
while Coins == true do
    
    local args = {
        [1] = "Coins",
        [2] = 1800,
        [3] = 1000000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()
end

end)


     end,
  })


local Toggle = Tab:CreateToggle({
   Name = "Auto Rebirth",
   CurrentValue = false,
   Flag = "Toggle3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   -- The function that takes place when the toggle is pressed
   -- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})
        


 --Section
 local Section = Tab:CreateSection("Best Items")

 local Button = Tab:CreateButton({
    Name = "Best Rocket Launcher (100M Coins)",
    Callback = function()
-- The function that takes place when the button is pressed

    end,
 })

 local Button = Tab:CreateButton({
    Name = "Best Backpack (50M Coins)",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Best Bomb (15M Coins)",
    Callback = function()      
    end,
 })

 local Section = Tab:CreateSection("Modifed Boosts")
 local Button = Tab:CreateButton({
    Name = "Coin Boost",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "XP Boost",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Brick Boost",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Extra Speed",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Extra Speed",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Levels (Same as inf levels)", --use levels0
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })

 local Button = Tab:CreateButton({
    Name = "Coins (Same as inf levels)",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })




























































 

 
 
 
 
 
 
 
 
 
 















--Player Stats
getgenv().Levels = false --Gets you levels
getgenv().AutoRebirth = false --Auto Rebirths for you
getgenv().Inf_Money = false --RUN DURING REBIRTHS AND LEVELS
--Best Items in the game   
getgenv().BestLauncher = false--Execute The Script And Look Into Console (Reach the Price Then Set It To True)
getgenv().BestBackup = false --Execute The Script And Look Into Console (Reach the Price Then Set It To True)
getgenv().BestBomb = false --Execute The Script And Look Into Console (Reach the Price Then Set It To True)
--Infinite Boosts
getgenv().CoinBoost = false --Gives you infinite Coin-Boost
getgenv().XPBoost = false --Gives you infinite XP-Boost
getgenv().BrickBoost = false --Gives you infinite Brick-Boost
getgenv().Extra_Speed = false --Gives you infinite Extra Speed
getgenv().Super_Jump = false --Gives you infinite Super Jump
getgenv().Levels0 = false --Gives you infinite Levels (USELESS AS FUCK)
getgenv().Coins = false --Gives you infinite Coins (USELESS AS FUCK)


--Edit this in any way i will find you and kill you. 
    print("Script Status - PRIVATE")
    wait(1)
  
    
    

spawn(function ()
    while Levels == true do
    
        game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer("Levels", 480, 10)
        wait()
    end
end)

spawn(function ()
    
while AutoRebirth == true do
    
    game:GetService("ReplicatedStorage").Remotes.rankUp:FireServer()
    wait()
    
end


end)

spawn(function ()
    
while Inf_Money == true do
    
	game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer("Coins", 480, 10000000)
    wait()

end

end)
    
spawn(function ()
    
while CoinBoost == true do
    
    local args = {
        [1] = "CoinBoost",
        [2] = 950000,
        [3] = 100000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
wait()    

end

end)

spawn(function ()
    
while XPBoost == true do
    
    local args = {
        [1] = "XPBoost",
        [2] = 950000,
        [3] = 100000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()

end

spawn(function ()
    
while Extra_Speed == true do
    
    local args = {
        [1] = "ExtraSpeed",
        [2] = 950000,
        [3] = 100000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()


end



end)




end)

spawn(function ()
    
while XPBoost == true do
    
    local args = {
        [1] = "BrickBoost",
        [2] = 950000,
        [3] = 100000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()
end

end)


spawn(function ()
    
while Super_Jump == true do
    
    local args = {
        [1] = "SuperJump",
        [2] = 950000,
        [3] = 100000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()
end

end)

spawn(function ()
    
while Levels0 == true do
    
    local args = {
        [1] = "Levels",
        [2] = 1800,
        [3] = 10
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()

end

end)

spawn(function ()
    
while Coins == true do
    
    local args = {
        [1] = "Coins",
        [2] = 1800,
        [3] = 1000000
    }
    
    game:GetService("ReplicatedStorage").Remotes.generateBoost:FireServer(unpack(args))
    wait()
end

end)

